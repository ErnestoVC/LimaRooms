// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Repository.dbcontext;

namespace Repository.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20190706104111_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Entity.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("apellidos");

                    b.Property<string>("correo");

                    b.Property<string>("nacionalidad");

                    b.Property<string>("nombre");

                    b.Property<string>("nroDocumento");

                    b.Property<string>("telefono");

                    b.Property<string>("tipoDocumento");

                    b.HasKey("Id");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("Entity.Contrato", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClienteId");

                    b.Property<DateTime>("Fin");

                    b.Property<DateTime>("Inicio");

                    b.Property<int>("InmobiliarioId");

                    b.Property<string>("tipoContrato");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.HasIndex("InmobiliarioId");

                    b.ToTable("Contratos");
                });

            modelBuilder.Entity("Entity.DetalleRecibo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("InmobiliarioId");

                    b.Property<int>("ReciboId");

                    b.Property<double>("adicional");

                    b.Property<int>("cantidad");

                    b.HasKey("Id");

                    b.HasIndex("InmobiliarioId");

                    b.HasIndex("ReciboId");

                    b.ToTable("DetealleRecibos");
                });

            modelBuilder.Entity("Entity.Inmobiliario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("direccion");

                    b.Property<string>("nombre");

                    b.Property<double>("precio");

                    b.Property<string>("tipoInmobiliario");

                    b.HasKey("Id");

                    b.ToTable("Inmobiliarios");
                });

            modelBuilder.Entity("Entity.Recibo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClienteId");

                    b.Property<string>("NroRecibo");

                    b.Property<double>("Total");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.ToTable("Recibos");
                });

            modelBuilder.Entity("Entity.Contrato", b =>
                {
                    b.HasOne("Entity.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Entity.Inmobiliario", "Inmobiliario")
                        .WithMany()
                        .HasForeignKey("InmobiliarioId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Entity.DetalleRecibo", b =>
                {
                    b.HasOne("Entity.Inmobiliario", "Inmobiliario")
                        .WithMany()
                        .HasForeignKey("InmobiliarioId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Entity.Recibo", "Recibo")
                        .WithMany("DetalleRecibo")
                        .HasForeignKey("ReciboId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Entity.Recibo", b =>
                {
                    b.HasOne("Entity.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
